apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  labels:
    app.kubernetes.io/version: "0.2"
    operator.tekton.dev/provider-type: community
  name: git-update-deployment
spec:
  description: This Task updates the image tag in a Git repo using kustomize.
    It requires a secret with credentials for accessing the git repo.
  params:
    - name: GIT_REPOSITORY
      type: string
    - name: GIT_REF
      type: string
    - name: NEW_IMAGE
      type: string
    - name: NEW_TAG
      type: string
    - name: KUSTOMIZATION_PATH
      type: string
  results:
    - description: The commit SHA
      name: commit
      type: string
  steps:
    - name: git-clone
      image: docker.io/alpine/git:v2.26.2
      resources: {}
      script: |
        rm -rf git-update-digest-workdir
        git clone $(params.GIT_REPOSITORY) -b $(params.GIT_REF) git-update-digest-workdir
      workingDir: $(workspaces.workspace.path)

    - name: update-tag
      image: quay.io/wpernath/kustomize-ubi:latest
      resources: {}
      script: |
        cd git-update-digest-workdir/$(params.KUSTOMIZATION_PATH)
        kustomize edit set image $(params.NEW_IMAGE):$(params.NEW_TAG)

        echo "##########################"
        echo "### kustomization.yaml ###"
        echo "##########################"
        cat kustomization.yaml
      workingDir: $(workspaces.workspace.path)

    - name: git-commit
      image: docker.io/alpine/git:v2.26.2
      resources: {}
      script: |
        cd git-update-digest-workdir

        git config user.email "tektonbot@redhat.com"
        git config user.name "My Tekton Bot"

        git status
        git add $(params.KUSTOMIZATION_PATH)/kustomization.yaml
        git commit -m "[ci] Image tag updated to $(params.NEW_TAG)"

        git push

        RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
        EXIT_CODE="$?"
        if [ "$EXIT_CODE" != 0 ]
        then
          exit $EXIT_CODE
        fi
        echo -n "$RESULT_SHA" > $(results.commit.path)
      workingDir: $(workspaces.workspace.path)

  workspaces:
    - description: The workspace consisting of the Git repo.
      name: workspace
